/*
========================================================================================
   Base Configuration for Process Resource Requirements
========================================================================================
*/

process {
    
    // Default resources for all processes
    cpus = { check_max(2, 'cpus') }
    memory = { check_max(6.GB * task.attempt, 'memory') }
    time = { check_max(4.h * task.attempt, 'time') }
    
    // Error strategy
    errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
    maxRetries = 3
    maxErrors = '-1'
    
    // Process-specific resource requirements
    
    withName: 'FASTQC' {
        cpus = { check_max(2, 'cpus') }
        memory = { check_max(4.GB * task.attempt, 'memory') }
        time = { check_max(2.h * task.attempt, 'time') }
    }
    
    withName: 'MULTIQC' {
        cpus = { check_max(2, 'cpus') }
        memory = { check_max(4.GB, 'memory') }
        time = { check_max(1.h, 'time') }
    }
    
    withName: 'KNEADDATA' {
        cpus = { check_max(8, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(12.h * task.attempt, 'time') }
    }
    
    withName: 'METAPHLAN' {
        cpus = { check_max(4, 'cpus') }
        memory = { check_max(16.GB * task.attempt, 'memory') }
        time = { check_max(4.h * task.attempt, 'time') }
    }
    
    withName: 'HUMANN' {
        cpus = { check_max(8, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(24.h * task.attempt, 'time') }
    }
    
    withName: 'MEGAHIT|MEGAHIT_COASSEMBLY' {
        cpus = { check_max(16, 'cpus') }
        memory = { check_max(64.GB * task.attempt, 'memory') }
        time = { check_max(48.h * task.attempt, 'time') }
    }
    
    withName: 'SPADES' {
        cpus = { check_max(16, 'cpus') }
        memory = { check_max(128.GB * task.attempt, 'memory') }
        time = { check_max(72.h * task.attempt, 'time') }
    }
    
    withName: 'PRODIGAL' {
        cpus = { check_max(2, 'cpus') }
        memory = { check_max(8.GB * task.attempt, 'memory') }
        time = { check_max(4.h * task.attempt, 'time') }
    }
    
    withName: 'BWA_INDEX' {
        cpus = { check_max(4, 'cpus') }
        memory = { check_max(16.GB * task.attempt, 'memory') }
        time = { check_max(4.h * task.attempt, 'time') }
    }
    
    withName: 'BWA_MEM' {
        cpus = { check_max(12, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(12.h * task.attempt, 'time') }
    }
    
    withName: 'BOWTIE2_BUILD' {
        cpus = { check_max(4, 'cpus') }
        memory = { check_max(16.GB * task.attempt, 'memory') }
        time = { check_max(4.h * task.attempt, 'time') }
    }
    
    withName: 'BOWTIE2_ALIGN' {
        cpus = { check_max(12, 'cpus') }
        memory = { check_max(24.GB * task.attempt, 'memory') }
        time = { check_max(12.h * task.attempt, 'time') }
    }
    
    withName: 'SAMTOOLS.*' {
        cpus = { check_max(4, 'cpus') }
        memory = { check_max(8.GB * task.attempt, 'memory') }
        time = { check_max(4.h * task.attempt, 'time') }
    }
    
    withName: 'METABAT2' {
        cpus = { check_max(8, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(8.h * task.attempt, 'time') }
    }
    
    withName: 'MAXBIN2' {
        cpus = { check_max(8, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(12.h * task.attempt, 'time') }
    }
    
    withName: 'CONCOCT' {
        cpus = { check_max(8, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(12.h * task.attempt, 'time') }
    }
    
    withName: 'DASTOOL' {
        cpus = { check_max(8, 'cpus') }
        memory = { check_max(24.GB * task.attempt, 'memory') }
        time = { check_max(8.h * task.attempt, 'time') }
    }
    
    withName: 'CHECKM' {
        cpus = { check_max(16, 'cpus') }
        memory = { check_max(64.GB * task.attempt, 'memory') }
        time = { check_max(24.h * task.attempt, 'time') }
    }
    
    withName: 'CDHIT' {
        cpus = { check_max(16, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(12.h * task.attempt, 'time') }
    }
    
    withName: 'KEGG_ANNOTATION|CAZY_ANNOTATION' {
        cpus = { check_max(16, 'cpus') }
        memory = { check_max(32.GB * task.attempt, 'memory') }
        time = { check_max(24.h * task.attempt, 'time') }
    }
    
    withName: 'DEMIC' {
        cpus = { check_max(8, 'cpus') }
        memory = { check_max(24.GB * task.attempt, 'memory') }
        time = { check_max(8.h * task.attempt, 'time') }
    }
}
